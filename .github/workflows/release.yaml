name: Release
on:
  release:
    types:
      - published
      - prereleased

jobs:
  release:
    runs-on: ubuntu-latest

    needs: [build, build-on-mac]

    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v1
      with:
        name: packages-ubuntu18.04
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-ubuntu16.04
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-ubuntu14.04
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-debian10
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-debian9
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-debian8
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-opensuse
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-centos7
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-centos6
        path: _packages
    - uses: actions/download-artifact@v1
      with:
        name: packages-mac
        path: _packages
    - name: set aws
      run: |
        curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        aws configure set aws_access_key_id ${{ secrets.AwsAccessKeyId }}
        aws configure set aws_secret_access_key ${{ secrets.AwsSecretAccessKey }}
        aws configure set default.region us-west-2
    - name: get packages
      run: |
        cd _packages && for var in $( ls |grep emqtt |grep -v sha256); do
          echo "$(cat $var.sha256) $var" | sha256sum -c || exit 1
        done
    - name: upload aws
      if: github.event_name == 'release'
      run: |
        version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g")
        aws s3 cp --recursive ./_packages  s3://packages.emqx.io/emqtt/$version
        aws cloudfront create-invalidation --distribution-id E3TYD0WSP4S14P --paths "/emqtt/$version/*"
    - name: upload github
      if: github.event_name == 'release'
      run: |
        version=$(echo ${{ github.ref }} | sed -r  "s .*/.*/(.*) \1 g")
        for var in $(ls _packages) ; do
            .github/workflows/script/upload_github_release_asset.sh owner=emqx repo=emqtt tag=$version filename=_packages/$var github_api_token=$(echo ${{ secrets.AccessToken }})
        done
